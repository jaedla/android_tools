#!/bin/bash

set -e

wait_for=online
wait_for_id='18d1:d001\|18d1:d002'
try_wifi=1
for arg in "${@}" ; do
  if [ ${arg} = --recovery ] ; then
    wait_for=recovery
    wait_for_id=18d1:d001
    try_wifi=0
  fi
  if [ ${arg} = --sideload ] ; then
    wait_for=sideload
    wait_for_id=18d1:d001
    try_wifi=0
  fi
  if [ ${arg} = --device ] ; then
    wait_for=device
    wait_for_id=18d1:d002
  fi
done

function is_wifi_connected {
  adb devices | grep ${android_ip} >/dev/null
#  result=$?
#  echo "is_wifi_connected, grep returned ${result}"
#  test ${result} = 0
}

function try_connect_usb {
  if lsusb | grep ${wait_for_id} >/dev/null ; then
    adb wait-for-usb-${wait_for}
    if [ $(adb devices | wc -l) -le 2 ] ; then
      echo "'adb devices' doesn't show device"
      exit 1
    fi
    if is_wifi_connected ; then
      adb disconnect >/dev/null
      if is_wifi_connected ; then
        echo "Failed to disconnect WiFi"
        exit 1
      fi
    fi
    return 0
  fi
  return 1
}

function try_connect_wifi {
  if ping -c 1 -W 1 ${android_ip} >/dev/null ; then
    while ! is_wifi_connected ; do
      adb connect ${android_ip}
    done
    adb wait-for-any-${wait_for}
    if ! pgrep android_keep_wifi_awake >/dev/null; then
      android_keep_wifi_awake
    fi
    return 0
  fi
  return 1
}

function try_connect {
  try_func=${1}
  connection_name=${2}
  if ${try_func} ; then
    if [ x${3} != x--quiet ] ; then
      echo " Android ${connection_name} connected"
    fi
    exit 0
  fi
}

function try_connections {
  try_connect try_connect_usb USB ${1}
  if [ ${try_wifi} = 1 ] ; then
    try_connect try_connect_wifi WiFi ${1}
  fi
}

function connect {
  try_connections --quiet
  echo -n "Waiting for Android connection "
  for ((;;)) ; do
    sleep 1
    echo -n .
    try_connections
  done
}

connect

